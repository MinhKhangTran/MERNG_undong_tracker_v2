# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
Exercise
"""
type Exercise {
  _id: ObjectId!
  category: String!
  name: String!
  set: [Set!]!
  workout: Workout!
}

input ExerciseInput {
  _id: ObjectId
  category: String!
  name: String!
  workout: ObjectId
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createExercise(exerciseInput: ExerciseInput!): Exercise!
  createSet(setInput: SetInput!): Set!
  createWorkout(workoutInput: WorkoutInput!): Workout!
  deleteExercise(exerciseId: ObjectId!): Boolean!
  deleteSet(setId: ObjectId!): Boolean!
  deleteWorkout(workoutId: ObjectId!): Boolean!
  login(input: LoginInput!): UserResponse!
  register(input: RegisterInput!): UserResponse!
  updateExercise(exerciseInput: ExerciseInput!): Exercise!
  updateSet(setInput: SetInput!): Set!
  updateWorkout(workoutInput: WorkoutInput!): Workout!
}

"""
Mongo id scalar type
"""
scalar ObjectId

type Query {
  getLoggedUser: User
  readExercise(exerciseId: ObjectId!): Exercise!
  readExercises(workoutId: ObjectId!): [Exercise!]!
  readSet(setId: ObjectId!): Set!
  readSets: [Set!]!
  readWorkout(workoutId: ObjectId!): Workout!
  readWorkouts: [Workout!]!
  user(userId: ObjectId!): User
}

input RegisterInput {
  email: String!
  password: String!
  username: String!
}

"""
Set
"""
type Set {
  _id: ObjectId!
  exercise: Exercise!
  gewicht: Float!
  wdh: Float!
}

input SetInput {
  _id: ObjectId
  exercise: ObjectId
  gewicht: Float!
  wdh: Float!
}

"""
User
"""
type User {
  _id: ObjectId!
  email: String!
  username: String!
}

type UserResponse {
  token: String
  user: User
}

"""
Workout
"""
type Workout {
  _id: ObjectId!
  athlete: User!
  datum: String!
  exercise: [Exercise!]!
  name: String!
}

input WorkoutInput {
  _id: ObjectId
  datum: String!
  name: String!
}
